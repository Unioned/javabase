1.使用继承的好处：
    ● 可以把多个子 类中重复的代码抽取到父类中了，提高代码的复用性。
    ● 子类可以在父类的基础上，增加其他的功能,使子类更强大。

2.什么时候用继承?
    当类与类之间，存在相同(共性)的内容，并满足子类是父类中的一种，就可以考虑使用继承，来优化代码。

3.继承后子类的特点?
    子类可以得到父类的属性和行为，子类可以使用。
    子类可以在父类的基础上新增其他功能，子类更强大。

4.继承的特点:
    Java只能单继承,一个类只能继承一个直接父类。
    Java不支持多继承,但是支持多层继承。
    Java中所有的类都直接或者间接继承于Object类。

5.子类到底能继承父类中的哪些内容?
    构造方法    非私有      不能    private 不能
    成员方法    虚方法表中   能     否则   不能
    成员变量    非私有      能      private  能

    关于变量的继承:
        私有变量是可以被继承的(由于通过this的getter方法是可以调用的),但是由于是私有,是无法被直接调用到的。
        需要一个私有变量对应的非私有的getter和setter方法才能进行间接取值和赋值。

    关于方法的继承:
        如果方法在虚方法表中,那么就能够被子类继承,否则就不能被子类继承。
        虚方法:指的是非private,非static,非final修饰的方法

6.继承中各个成员特点
    成员变量的访问特点:
        就近原则：
            先在局部位置找，本类成员位置找,父类成员位置找,逐级往上。
        对于重名的变量：
            局部变量可以直接 属性名 调用
            直接访问本类成员变量可以用 this.属性名 调用,
            访问父类可以用 super.属性名 调用。(非private)

    成员方法的访问特点:
        方法重写：
            重写的条件：
                当父类的方法不能满足子类现在的需求时，需要进行方法重写
                加上注解@OverRide可以保证方法重写的要求正确性
            方法重写注意事项和要求：
                1. 重写方法的名称、形参列表必须与父类中的一致。
                2. 子类重写父类方法时,访问权限子类必须大于等于父类(空着不写 < protected < public)
                3. 子类重写父类方法时，返回值类型子类必须小于等于父类
                4. 建议:重写的方法尽量和父类保持一致。
                5. 只有被添加到虚方法表中的方法才能被重写(重写的方法会覆盖虚方法表中的方法,传递给子类)

            通过方法重写对父类方法进行增强则可以先通过 super.父类方法名 调用父类方法,之后再在方法中输入语句进行其他操作。

    构造方法的特点:
        父类中的构造方法不会被子类继承,但是可以通过super调用
        子类中所有的构造方法默认先访问父类中的无参构造，再执行自己。
            为什么?
            ● 子类在初始化的时候，有可能会使用到父类中的数据，如果父类没有完成初始化，子类将无法使用父类的数据。
            ● 子类初始化之前，一定要调用父类构造方法先完成父类数据空间的初始化。
            怎么调用父类构造方法的?
            ● 子类构造方法的第一行语句默认都是: super(); 不写也存在，且必须在第一行。
            ● 如果想调用父类有参构造，必须手动写super进行调用。

7.this,super使用总结
    this:理解为一个局部变量,表示当前方法调用者的地址值
        访问成员变量      this.成员变量           访问本类的成员变量
        访问成员方法      this.成员方法(args..)   访问本类的成员方法
        访问构造方法      this(args..)           访问本类构造方法
            注：通过this(args..)可以访问类中其他的构造方法,通过这种方式访问是
                需要放在构造方法第一行,本构造函数中虚拟机不会再添加super()了。

    super:代表父类存储空间
        访问成员变量      super.成员变量          访问父类的成员变量
        访问成员方法      super.成员方法(args..)  访问父类的成员方法
        访问构造方法      super(args..)          访问父类构造方法

注意事项：
    子类只能访问父类中非私有的成员(即未被private修饰符修饰)。
